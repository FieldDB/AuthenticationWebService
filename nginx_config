## Decare the upstream services and servers
upstream authservice {
        server localhost:3183;
}

upstream wwwserver {
        server localhost:3182;
}

#upstream corpusservice {
#        server 127.0.0.1:6984;
#}

upstream corsservice {
        server 127.0.0.1:3186;
}

log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                       '"$status" $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for"';
#
# The auth server
#
server {
    listen       443;
    server_name authdev.lingsync.org;
    ssl on;
    ssl_certificate /home/fielddb/fielddbworkspace/AuthenticationWebService/fielddb_production.crt;
    ssl_certificate_key /home/fielddb/fielddbworkspace/AuthenticationWebService/fielddb_production.key;

    #charset koi8-r;

    access_log  /var/log/nginx/authlingsync.access.log  main;
    error_log /var/log/nginx/authlingsync.error.log;

    location / {
       #root   /usr/share/nginx/html;
       #index  index.html index.htm;
       #	location /db/ { proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_pass http://username.cloudant.com:5984/; } 
#http://support.cloudant.com/customer/portal/articles/359321-how-do-i-read-and-write-to-my-cloudant-database-from-the-browser-

     #if ($request_method = 'OPTIONS') {
       #add_header 'Access-Control-Allow-Headers' 'Content-Type,Accept,X-Requested-With, User-Agent, Origin';
       #add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
       #add_header 'Access-Control-Allow-Credentials' 'true';
       #add_header "Access-Control-Allow-Origin" "https://corpusdev.lingsync.org";
      #}
       proxy_pass_header  Set-Cookie;
       proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
       proxy_redirect off;
       proxy_buffering off;
       proxy_set_header        Host            $host;
       proxy_set_header        X-Real-IP       $remote_addr;
       proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
       proxy_pass https://authservice;
    }

}

#
# The www server
#
server {
    listen       443;
    server_name wwwdev.lingsync.org;
    ssl on;
    ssl_certificate /home/fielddb/fielddbworkspace/FieldDBWebServer/fielddb_production.crt;
    ssl_certificate_key /home/fielddb/fielddbworkspace/FieldDBWebServer/fielddb_production.key;

    #charset koi8-r;

    access_log  /var/log/nginx/wwwlingsync.access.log  main;
    error_log /var/log/nginx/wwwlingsync.error.log;

    location / {
       #root   /usr/share/nginx/html;
       #index  index.html index.htm;
       proxy_pass https://wwwserver;
       proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
       proxy_redirect off;
       proxy_buffering off;
       proxy_set_header        Host            $host;
       proxy_set_header        X-Real-IP       $remote_addr;
       proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    }

}

#
# The corpus service
#
server {
    listen       443;
    server_name corpusdev.lingsync.org;
    ssl on;
    ssl_certificate /home/fielddb/fielddbworkspace/CorpusWebService/fielddb_production.crt;
    ssl_certificate_key /home/fielddb/fielddbworkspace/CorpusWebService/fielddb_production.key;

    #charset koi8-r;

    access_log  /var/log/nginx/corpuslingsync.access.log  main;
    error_log /var/log/nginx/corpuslingsync.error.log debug;

    location / {
       proxy_pass http://corsservice;
       proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
       proxy_redirect off;
       proxy_buffering off;
       # TODO set the domain on teh cookie to be the origin.. so that we can get a cross site cookie?
       #proxy_cookie_domain   ";Domain=" ";Domain=lingsync.org";
       proxy_pass_header  Set-Cookie;
       proxy_set_header        Host            $host;
       proxy_set_header        X-Real-IP       $remote_addr;
       proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    }

}



server {
     listen 80;
     server_name wwwwdev.lingsync.org;
     rewrite ^(.*) https://wwwdev.lingsync.org$1 permanent;
}

server {
     listen 80;
     server_name authdev.lingsync.org;
     rewrite ^(.*) https://wwwdev.lingsync.org$1 permanent;
}

server {
     listen 80;
     server_name corpusdev.lingsync.org;
     rewrite ^(.*) https://corpusdev.lingsync.org$1 permanent;
}
